# Copyright (c) 2022 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
#
# SPDX-FileCopyrightText: NVIDIA CORPORATION & AFFILIATES
# SPDX-License-Identifier: LicenseRef-NvidiaProprietary
#
# NVIDIA CORPORATION, its affiliates and licensors retain all intellectual
# property and proprietary rights in and to this material, related
# documentation and any modifications thereto. Any use, reproduction,
# disclosure or distribution of this material and related documentation
# without an express license agreement from NVIDIA CORPORATION or
# its affiliates is strictly prohibited.

.samples_common:
    variables:
        PYTHON_VERSIONS: "3.8 3.9"

b:samples:
    extends:
      - .launch_rule
      - .samples_common
    stage: build
    image: 'gitlab-master.nvidia.com:5005/cv/cvcuda/samples-linux-x64:$TAG_IMAGE'
    tags: [ linux-x64, build]
    artifacts:
        paths: [ 'cvcuda-installer/' ]
    before_script:
        - 'rm -rf cvcuda-installer'
    script:
        - apt-get update
        - DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends libpython3.8-dev libpython3.9-dev python3.8 python3.9
        -  ./ci/build_samples.sh build "-DPYTHON_VERSIONS=${PYTHON_VERSIONS/ /;}"
        - 'pushd build && cpack && popd'
        - 'mkdir cvcuda-installer && mv -v build/*.{deb,tar.*} build/VERSION cvcuda-installer'

test:samples:
    extends:
      - .launch_rule
      - .samples_common
    stage: test
    image: 'nvcr.io/nvidia/tensorrt:22.09-py3'
    variables:
        CUDA_CACHE_DISABLE: 1
        GIT_STRATEGY: none
    needs: [ 'b:samples' ]
    tags: [ linux-x64, test, cuda11 ]
    script:
      - 'pwd'
      - 'ls -1 cvcuda-installer/*.deb'
      - 'version=$(cat cvcuda-installer/VERSION)'
      - "apt-get update"
      - 'pkgs="./cvcuda-installer/nvcv-lib-${version}.deb ./cvcuda-installer/nvcv-dev-${version}.deb ./cvcuda-installer/cvcuda-samples-${version}.deb"'
      - 'for p in $PYTHON_VERSIONS; do pkgs="$pkgs ./cvcuda-installer/nvcv-python$p-${version}.deb"; done'
      - "apt-get install -y --no-install-recommends $pkgs"
      - "cd /opt/nvidia/cvcuda*/samples"
      - "chmod a+x ./scripts/*.sh"
      - "./scripts/install_dependencies.sh"
      - "./scripts/run_samples.sh"
